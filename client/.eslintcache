[{"D:\\ProgKievFullStack\\стажировка\\MERN-main\\MERN-main\\client\\src\\index.js":"1","D:\\ProgKievFullStack\\стажировка\\MERN-main\\MERN-main\\client\\src\\reportWebVitals.js":"2","D:\\ProgKievFullStack\\стажировка\\MERN-main\\MERN-main\\client\\src\\components\\auth\\login.tsx":"3","D:\\ProgKievFullStack\\стажировка\\MERN-main\\MERN-main\\client\\src\\App.tsx":"4","D:\\ProgKievFullStack\\стажировка\\MERN-main\\MERN-main\\client\\src\\routes.tsx":"5","D:\\ProgKievFullStack\\стажировка\\MERN-main\\MERN-main\\client\\src\\components\\common\\Preloader.tsx":"6","D:\\ProgKievFullStack\\стажировка\\MERN-main\\MERN-main\\client\\src\\pages\\CreateTodo.tsx":"7","D:\\ProgKievFullStack\\стажировка\\MERN-main\\MERN-main\\client\\src\\pages\\AuthPage.tsx":"8","D:\\ProgKievFullStack\\стажировка\\MERN-main\\MERN-main\\client\\src\\pages\\ProfilePage.tsx":"9","D:\\ProgKievFullStack\\стажировка\\MERN-main\\MERN-main\\client\\src\\pages\\TodoListPage.tsx":"10","D:\\ProgKievFullStack\\стажировка\\MERN-main\\MERN-main\\client\\src\\pages\\Admin.tsx":"11","D:\\ProgKievFullStack\\стажировка\\MERN-main\\MERN-main\\client\\src\\components\\auth\\register.tsx":"12","D:\\ProgKievFullStack\\стажировка\\MERN-main\\MERN-main\\client\\src\\context\\AuthContext.ts":"13","D:\\ProgKievFullStack\\стажировка\\MERN-main\\MERN-main\\client\\src\\hooks\\authHook.ts":"14","D:\\ProgKievFullStack\\стажировка\\MERN-main\\MERN-main\\client\\src\\hooks\\messageHook.ts":"15","D:\\ProgKievFullStack\\стажировка\\MERN-main\\MERN-main\\client\\src\\hooks\\hookRequests.ts":"16","D:\\ProgKievFullStack\\стажировка\\MERN-main\\MERN-main\\client\\src\\components\\common\\Navbar.tsx":"17","D:\\ProgKievFullStack\\стажировка\\MERN-main\\MERN-main\\client\\src\\components\\todo\\Todo.tsx":"18","D:\\ProgKievFullStack\\стажировка\\MERN-main\\MERN-main\\client\\src\\components\\user\\ProfileInfo.tsx":"19","D:\\ProgKievFullStack\\стажировка\\MERN-main\\MERN-main\\client\\src\\components\\admin\\Users.tsx":"20","D:\\ProgKievFullStack\\стажировка\\MERN-main\\MERN-main\\client\\src\\components\\admin\\ShowTodoUser.tsx":"21","D:\\ProgKievFullStack\\стажировка\\MERN-main\\MERN-main\\client\\src\\components\\todo\\ShowAndEditTodo.tsx":"22","D:\\ProgKievFullStack\\стажировка\\MERN-main\\MERN-main\\client\\src\\components\\common\\MyMoment.tsx":"23","D:\\ProgKievFullStack\\стажировка\\MERN-main\\MERN-main\\client\\src\\components\\user\\ShowAndEdit.tsx":"24","D:\\ProgKievFullStack\\стажировка\\MERN-main\\MERN-main\\client\\src\\components\\common\\EditField.tsx":"25","D:\\ProgKievFullStack\\стажировка\\MERN-main\\MERN-main\\client\\src\\components\\todo\\NameTodo.tsx":"26","D:\\ProgKievFullStack\\Git_Repositories\\MERNTS\\client\\src\\index.js":"27","D:\\ProgKievFullStack\\Git_Repositories\\MERNTS\\client\\src\\App.tsx":"28","D:\\ProgKievFullStack\\Git_Repositories\\MERNTS\\client\\src\\reportWebVitals.js":"29","D:\\ProgKievFullStack\\Git_Repositories\\MERNTS\\client\\src\\hooks\\authHook.ts":"30","D:\\ProgKievFullStack\\Git_Repositories\\MERNTS\\client\\src\\context\\AuthContext.ts":"31","D:\\ProgKievFullStack\\Git_Repositories\\MERNTS\\client\\src\\routes.tsx":"32","D:\\ProgKievFullStack\\Git_Repositories\\MERNTS\\client\\src\\components\\common\\Navbar.tsx":"33","D:\\ProgKievFullStack\\Git_Repositories\\MERNTS\\client\\src\\components\\common\\Preloader.tsx":"34","D:\\ProgKievFullStack\\Git_Repositories\\MERNTS\\client\\src\\pages\\AuthPage.tsx":"35","D:\\ProgKievFullStack\\Git_Repositories\\MERNTS\\client\\src\\pages\\TodoListPage.tsx":"36","D:\\ProgKievFullStack\\Git_Repositories\\MERNTS\\client\\src\\pages\\ProfilePage.tsx":"37","D:\\ProgKievFullStack\\Git_Repositories\\MERNTS\\client\\src\\pages\\CreateTodo.tsx":"38","D:\\ProgKievFullStack\\Git_Repositories\\MERNTS\\client\\src\\pages\\Admin.tsx":"39","D:\\ProgKievFullStack\\Git_Repositories\\MERNTS\\client\\src\\hooks\\hookRequests.ts":"40","D:\\ProgKievFullStack\\Git_Repositories\\MERNTS\\client\\src\\hooks\\messageHook.ts":"41","D:\\ProgKievFullStack\\Git_Repositories\\MERNTS\\client\\src\\components\\auth\\login.tsx":"42","D:\\ProgKievFullStack\\Git_Repositories\\MERNTS\\client\\src\\components\\auth\\register.tsx":"43","D:\\ProgKievFullStack\\Git_Repositories\\MERNTS\\client\\src\\components\\todo\\Todo.tsx":"44","D:\\ProgKievFullStack\\Git_Repositories\\MERNTS\\client\\src\\components\\user\\ProfileInfo.tsx":"45","D:\\ProgKievFullStack\\Git_Repositories\\MERNTS\\client\\src\\components\\admin\\Users.tsx":"46","D:\\ProgKievFullStack\\Git_Repositories\\MERNTS\\client\\src\\components\\admin\\ShowTodoUser.tsx":"47","D:\\ProgKievFullStack\\Git_Repositories\\MERNTS\\client\\src\\components\\user\\ShowAndEdit.tsx":"48","D:\\ProgKievFullStack\\Git_Repositories\\MERNTS\\client\\src\\components\\todo\\ShowAndEditTodo.tsx":"49","D:\\ProgKievFullStack\\Git_Repositories\\MERNTS\\client\\src\\components\\common\\MyMoment.tsx":"50","D:\\ProgKievFullStack\\Git_Repositories\\MERNTS\\client\\src\\components\\common\\EditField.tsx":"51","D:\\ProgKievFullStack\\Git_Repositories\\MERNTS\\client\\src\\components\\todo\\NameTodo.tsx":"52"},{"size":508,"mtime":1614811557520,"results":"53","hashOfConfig":"54"},{"size":362,"mtime":1612800019000,"results":"55","hashOfConfig":"54"},{"size":2280,"mtime":1615036059092,"results":"56","hashOfConfig":"54"},{"size":898,"mtime":1615036787166,"results":"57","hashOfConfig":"54"},{"size":1348,"mtime":1615027166696,"results":"58","hashOfConfig":"54"},{"size":730,"mtime":1614810819646,"results":"59","hashOfConfig":"54"},{"size":2619,"mtime":1615027441658,"results":"60","hashOfConfig":"54"},{"size":2557,"mtime":1614809576443,"results":"61","hashOfConfig":"54"},{"size":2818,"mtime":1615037721890,"results":"62","hashOfConfig":"54"},{"size":3814,"mtime":1615036559841,"results":"63","hashOfConfig":"54"},{"size":3190,"mtime":1615036015618,"results":"64","hashOfConfig":"54"},{"size":3351,"mtime":1615036078407,"results":"65","hashOfConfig":"54"},{"size":447,"mtime":1615029819810,"results":"66","hashOfConfig":"54"},{"size":1431,"mtime":1615037152309,"results":"67","hashOfConfig":"54"},{"size":330,"mtime":1615030853501,"results":"68","hashOfConfig":"54"},{"size":1199,"mtime":1615037593137,"results":"69","hashOfConfig":"54"},{"size":2275,"mtime":1615031602973,"results":"70","hashOfConfig":"54"},{"size":3212,"mtime":1615037812557,"results":"71","hashOfConfig":"54"},{"size":3195,"mtime":1615037721859,"results":"72","hashOfConfig":"54"},{"size":2399,"mtime":1615036033776,"results":"73","hashOfConfig":"54"},{"size":1722,"mtime":1615034776865,"results":"74","hashOfConfig":"54"},{"size":1364,"mtime":1615037812572,"results":"75","hashOfConfig":"54"},{"size":275,"mtime":1615036114939,"results":"76","hashOfConfig":"54"},{"size":1304,"mtime":1615037721871,"results":"77","hashOfConfig":"54"},{"size":950,"mtime":1615037812528,"results":"78","hashOfConfig":"54"},{"size":527,"mtime":1615037812541,"results":"79","hashOfConfig":"54"},{"size":525,"mtime":1615164334257,"results":"80","hashOfConfig":"81"},{"size":926,"mtime":1615164334005,"results":"82","hashOfConfig":"81"},{"size":375,"mtime":1615164334331,"results":"83","hashOfConfig":"81"},{"size":1540,"mtime":1615219614231,"results":"84","hashOfConfig":"81"},{"size":523,"mtime":1615219546156,"results":"85","hashOfConfig":"81"},{"size":1394,"mtime":1615164334339,"results":"86","hashOfConfig":"81"},{"size":2334,"mtime":1615164334115,"results":"87","hashOfConfig":"81"},{"size":750,"mtime":1615164334130,"results":"88","hashOfConfig":"81"},{"size":2835,"mtime":1615207290404,"results":"89","hashOfConfig":"81"},{"size":4170,"mtime":1615307409327,"results":"90","hashOfConfig":"81"},{"size":3125,"mtime":1615220571063,"results":"91","hashOfConfig":"81"},{"size":2836,"mtime":1615207939137,"results":"92","hashOfConfig":"81"},{"size":3393,"mtime":1615221011891,"results":"93","hashOfConfig":"81"},{"size":1302,"mtime":1615219661182,"results":"94","hashOfConfig":"81"},{"size":342,"mtime":1615164334241,"results":"95","hashOfConfig":"81"},{"size":2402,"mtime":1615164334068,"results":"96","hashOfConfig":"81"},{"size":3497,"mtime":1615164334068,"results":"97","hashOfConfig":"81"},{"size":3419,"mtime":1615218047117,"results":"98","hashOfConfig":"81"},{"size":3357,"mtime":1615220619025,"results":"99","hashOfConfig":"81"},{"size":2465,"mtime":1615164334052,"results":"100","hashOfConfig":"81"},{"size":1828,"mtime":1615221113134,"results":"101","hashOfConfig":"81"},{"size":1421,"mtime":1615220656008,"results":"102","hashOfConfig":"81"},{"size":1502,"mtime":1615218116333,"results":"103","hashOfConfig":"81"},{"size":285,"mtime":1615164334099,"results":"104","hashOfConfig":"81"},{"size":1041,"mtime":1615219214774,"results":"105","hashOfConfig":"81"},{"size":605,"mtime":1615218155534,"results":"106","hashOfConfig":"81"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},"oa25xq",{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"114"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"114"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"114"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"114"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"114"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"114"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"114"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"114"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},"1bjff3m",{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"174"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"174"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"174"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"174"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"174"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"174"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"174"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"174"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},"D:\\ProgKievFullStack\\стажировка\\MERN-main\\MERN-main\\client\\src\\index.js",[],["231","232"],"D:\\ProgKievFullStack\\стажировка\\MERN-main\\MERN-main\\client\\src\\reportWebVitals.js",[],"D:\\ProgKievFullStack\\стажировка\\MERN-main\\MERN-main\\client\\src\\components\\auth\\login.tsx",[],["233","234"],"D:\\ProgKievFullStack\\стажировка\\MERN-main\\MERN-main\\client\\src\\App.tsx",[],"D:\\ProgKievFullStack\\стажировка\\MERN-main\\MERN-main\\client\\src\\routes.tsx",[],"D:\\ProgKievFullStack\\стажировка\\MERN-main\\MERN-main\\client\\src\\components\\common\\Preloader.tsx",[],"D:\\ProgKievFullStack\\стажировка\\MERN-main\\MERN-main\\client\\src\\pages\\CreateTodo.tsx",["235"],"import React, { useContext, useEffect, useState } from 'react'\nimport { useRequest } from \"../hooks/hookRequests\"\nimport { AuthContext } from \"../context/AuthContext\"\nimport { useMessage } from \"../hooks/messageHook\"\nimport { useHistory } from \"react-router-dom\"\n\nexport const CreateTodo: React.FC = (props) => {\n    const auth = useContext(AuthContext)\n    const message = useMessage()\n    let history = useHistory()\n    const { error, req, clearError, loading } = useRequest()\n    const [Todo, setTodo] = useState({ name: '', description: '' })\n\n\n    useEffect(() => {\n        message(error)\n        clearError()\n    }, [error, message, clearError])\n\n    const createTodo = async () => {\n        try {\n            const data = await req('/api/todo/create', 'POST', { ...Todo }, { Authorization: `Baerer ${auth.token}` })\n\n            history.push('/todoList')\n\n        } catch (e) {\n\n        }\n    }\n\n    return (\n        <div className=\"card blue darken-1\">\n            <div className=\"card-content white-text\">\n                <span className=\"card-title\">Создание todo</span>\n                <div>\n                    <div className=\"input-field\">\n                        <input\n                            id=\"name\"\n                            type=\"text\"\n                            className=\"yellow-input\"\n                            name=\"name\"\n                            value={Todo.name}\n                            onChange={e => setTodo({ ...Todo, name: e.target.value, description: Todo.description })}\n                        />\n                        <label htmlFor=\"name\">Название</label>\n                    </div>\n                    <div className=\"input-field\">\n                        <textarea\n                            id=\"desc\"\n                            className=\"materialize-textarea\"\n                            name=\"description\"\n                            value={Todo.description}\n                            onChange={e => setTodo({ ...Todo, description: e.target.value, name: Todo.name })}\n                        ></textarea>\n                        <label htmlFor=\"desc\">Описание</label>\n                    </div>\n                </div>\n            </div>\n            <div className=\"card-action dflex-sb\">\n                <button\n                    className=\"btn green lighten-1\"\n                    type=\"submit\"\n                    name=\"action\"\n                    onClick={createTodo}\n                    disabled={loading}\n                >\n                    Создать\n                </button>\n            </div>\n        </div>\n    )\n}\n","D:\\ProgKievFullStack\\стажировка\\MERN-main\\MERN-main\\client\\src\\pages\\AuthPage.tsx",[],"D:\\ProgKievFullStack\\стажировка\\MERN-main\\MERN-main\\client\\src\\pages\\ProfilePage.tsx",[],"D:\\ProgKievFullStack\\стажировка\\MERN-main\\MERN-main\\client\\src\\pages\\TodoListPage.tsx",[],"D:\\ProgKievFullStack\\стажировка\\MERN-main\\MERN-main\\client\\src\\pages\\Admin.tsx",[],"D:\\ProgKievFullStack\\стажировка\\MERN-main\\MERN-main\\client\\src\\components\\auth\\register.tsx",[],"D:\\ProgKievFullStack\\стажировка\\MERN-main\\MERN-main\\client\\src\\context\\AuthContext.ts",[],"D:\\ProgKievFullStack\\стажировка\\MERN-main\\MERN-main\\client\\src\\hooks\\authHook.ts",["236"],"import { useCallback, useEffect, useState } from \"react\"\n\nconst storageName = 'userData'\n\ntype LocalStorageType = {\n    userId: number,\n    token: string,\n    email: string\n}\n\ntype UseAuthType = () => {\n    logout: () => void,\n    ready: boolean,\n    login: (jwtToken: string, id: number, email: string) => void,\n    userId: number | null,\n    email: string | null,\n    token: string | null\n}\n\nexport const useAuth: UseAuthType = () => {\n    const [token, setToken] = useState<string | null>(null)\n    const [ready, setReady] = useState<boolean>(false)\n    const [userId, setUserId] = useState<number | null>(null)\n    const [email, setEmail] = useState<string | null>(null)\n\n    const login = useCallback((jwtToken: string, id: number, email: string) => {\n        setToken(jwtToken)\n        setUserId(id)\n        setEmail(email)\n\n        localStorage.setItem(storageName, JSON.stringify({\n            userId, token, email\n        }))\n    }, [])\n\n    const logout = useCallback(() => {\n        setToken(null)\n        setUserId(null)\n        setEmail(null)\n\n        localStorage.removeItem(storageName)\n    }, [])\n\n    useEffect(() => {\n        const data = JSON.parse(localStorage.getItem(storageName) || '[]') as LocalStorageType\n\n        if (data && data.token) {\n            login(data.token, data.userId, data.email)\n        }\n\n        setReady(true)\n    }, [login])\n\n    return { login, logout, token, userId, ready, email }\n}","D:\\ProgKievFullStack\\стажировка\\MERN-main\\MERN-main\\client\\src\\hooks\\messageHook.ts",[],"D:\\ProgKievFullStack\\стажировка\\MERN-main\\MERN-main\\client\\src\\hooks\\hookRequests.ts",[],"D:\\ProgKievFullStack\\стажировка\\MERN-main\\MERN-main\\client\\src\\components\\common\\Navbar.tsx",["237","238"],"import React, { useContext } from 'react'\nimport { AuthContext } from \"../../context/AuthContext\"\nimport { NavLink, Redirect } from \"react-router-dom\"\n\ntype logoutHandlerType = (e: React.MouseEvent) => JSX.Element\n\nexport const Navbar: React.FC = () => {\n    const auth = useContext(AuthContext)\n\n    const logoutHandler: logoutHandlerType = (e) => {\n        e.preventDefault()\n        auth.logout()\n        return <Redirect to='/' />\n    }\n\n    return (\n        <nav>\n            <div className=\"nav-wrapper pd-l-10\">\n                {auth.email === 'admin@mail.ru'\n                    ? <a href=\"#\" className=\"brand-logo center\">my Todo list</a>\n                    : <NavLink to=\"/todoList\"\n                        className=\"brand-logo center\"\n                    >\n                        my Todo list\n                    </NavLink>\n                }\n                <ul id=\"nav-mobile\" className=\"right \">\n                    {auth.email === 'admin@mail.ru'\n                        ? ''\n                        : <li>\n                            <NavLink to=\"/create\"\n                                className=\"btn-floating btn-small waves-effect waves-light  teal lighten-1\"\n                            >\n                                <i className=\"material-icons\">add</i>\n                            </NavLink>\n                        </li>\n                    }\n                    {auth.email === 'admin@mail.ru'\n                        ? ''\n                        : <li>\n                            <NavLink to=\"/profile\"\n                                className=\"btn-floating btn-small waves-effect waves-light yellow darken-3\"\n                            >\n                                <i className=\"material-icons\">account_box</i>\n                            </NavLink>\n                        </li>\n                    }\n                    <li>\n                        <a\n                            className=\"btn-floating btn-small waves-effect waves-light deep-orange lighten-2\"\n                            onClick={logoutHandler}\n                        >\n                            <i className=\"material-icons\">exit_to_app</i>\n                        </a>\n                    </li>\n                </ul>\n            </div>\n        </nav>\n    )\n}","D:\\ProgKievFullStack\\стажировка\\MERN-main\\MERN-main\\client\\src\\components\\todo\\Todo.tsx",[],"D:\\ProgKievFullStack\\стажировка\\MERN-main\\MERN-main\\client\\src\\components\\user\\ProfileInfo.tsx",["239"],"import React, {useState} from 'react'\nimport {ShowAndEdit} from \"./ShowAndEdit\"\nimport {EditField} from \"../common/EditField\"\nimport {IUser} from '../../Interface/IUser'\n\ntype ProfileInfoPropsType = {\n    updatePassword: () => void,\n    user: IUser,\n    changeHandler: (e: React.ChangeEvent<HTMLInputElement>) => void,\n    updateProfile: () => void,\n    loading: boolean,\n    deleteUser: (e: React.MouseEvent) => void\n}\n\nexport const ProfileInfo: React.FC<ProfileInfoPropsType> = (props) => {\n    const [editMode, setEditMode] = useState<Boolean>(false)\n\n    const changePassword = () => {\n        props.updatePassword()\n\n        setEditMode(!editMode)\n    }\n\n    return (\n        <div className='mg-top-10'>\n            <ul className=\"collection with-header\">\n                <li className=\"collection-header\">\n                    <h5>Имя</h5>\n                </li>\n                <ShowAndEdit\n                    text={props.user.name}\n                    config={'name'}\n                    changeHandler={props.changeHandler}\n                    update={props.updateProfile}\n                    loading={props.loading}\n                />\n                <li className=\"collection-header\">\n                    <h5>Фамилия</h5>\n                </li>\n                <ShowAndEdit\n                    text={props.user.lastName}\n                    config={'lastName'}\n                    changeHandler={props.changeHandler}\n                    update={props.updateProfile}\n                    loading={props.loading}\n                />\n                <li className=\"collection-header\">\n                    <h5>Email</h5>\n                </li>\n                <li className=\"collection-header\">\n                    <div>\n                        {props.user.email}\n                    </div>\n                </li>\n                <li className=\"collection-header\">\n                    <h5>Пароль</h5>\n                </li>\n                <li className=\"collection-item cur-pointer\">\n                    {!editMode\n                        ? <div>\n                            Изменить пароль\n                            <a\n                                href=\"#!\"\n                                className=\"secondary-content\"\n                                onClick={() => setEditMode(!editMode)}\n                            >\n                                <i className=\"material-icons\">edit</i>\n                            </a>\n                        </div>\n                        : <EditField\n                            config={'password'}\n                            text={''}\n                            changeHandler={props.changeHandler}\n                            changeField={changePassword}\n                            loading={props.loading}\n                        />\n                    }\n                </li>\n            </ul>\n            <a\n                className=\"waves-effect waves-light btn-small red darken-1 float-right\"\n                onClick={(e) => props.deleteUser(e)}\n            >\n                <i className=\"material-icons right\">delete</i>\n                Удалить профиль\n            </a>\n        </div>\n    )\n}","D:\\ProgKievFullStack\\стажировка\\MERN-main\\MERN-main\\client\\src\\components\\admin\\Users.tsx",["240","241","242","243"],"import React from 'react'\nimport { IUser } from '../../Interface/IUser'\n\ntype UsersPropsType = {\n    user: IUser,\n    getTodoUser: (id: number | undefined) => void,\n    changeStatusUser: (id: number | undefined) => void,\n    deleteUser: (id: number | undefined) => void\n}\n\nexport const Users: React.FC<UsersPropsType> = (props) => {\n    return (\n        <>\n            <tr>\n                <td>{props.user.email}</td>\n                <td>\n                    {props.user.status\n                        ? 'Забанен'\n                        : 'Не забанен'\n                    }\n                </td>\n                <td>\n                    <a\n                        className=\"waves-effect waves-light btn modal-trigger\"\n                        onClick={() => props.getTodoUser(props.user._id)}\n                    >\n                        Показать todo\n                    </a>\n                </td>\n                <td>\n                    {props.user.status\n                        ? <a\n                            className=\"waves-effect waves-light btn-small blue lighten-2\"\n                            onClick={() => props.changeStatusUser(props.user._id)}\n                        >\n                            Разбанить\n                        </a>\n                        : <a\n                            className=\"waves-effect waves-light btn-small red darken-1\"\n                            onClick={() => props.changeStatusUser(props.user._id)}\n                        >\n                            Забанить\n                        </a>\n                    }\n                </td>\n                <td>\n                    <a\n                        className=\"waves-effect waves-light btn-small\"\n                        onClick={() => props.deleteUser(props.user._id)}\n                    >\n                        Удалить пользователя\n                    </a>\n                </td>\n            </tr>\n\n            <div id=\"modal1\" className=\"modal bottom-sheet\">\n                <div className=\"modal-content\">\n                    <h4>Modal Header</h4>\n                    <p>A bunch of text</p>\n                </div>\n                <div className=\"modal-footer\">\n                    <a href=\"#!\" className=\"modal-close waves-effect waves-green btn-flat\">Agree</a>\n                </div>\n            </div>\n        </>\n    )\n}","D:\\ProgKievFullStack\\стажировка\\MERN-main\\MERN-main\\client\\src\\components\\admin\\ShowTodoUser.tsx",["244","245"],"import React from 'react'\nimport { ITodo } from '../../Interface/ITodo'\n\ntype ShowTodoUsersPropsType = {\n    todos: Array<ITodo>,\n    closeTodo: () => void\n}\n\nexport const ShowTodoUsers: React.FC<ShowTodoUsersPropsType> = (props) => {\n    let todos = null\n    if (props.todos.length > 0) {\n        todos = props.todos.map(t => <li key={t._id} className=\"collection-item\">{t.name}</li>)\n    } else {\n        return (\n            <div className='shadow'>\n                <div className='show-todo-user-modal'>\n                    <div className='pos-rel'>\n                        <a\n                            className=\"btn-floating btn-small waves-effect waves-light red pos-btn-close\"\n                            onClick={props.closeTodo}\n                        >\n                            <i className=\"material-icons\">close</i>\n                        </a>\n                        <ul className=\"collection\">\n                            <li className=\"collection-item\">У етого пользователя нет todo</li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n    return (\n        <div className='shadow'>\n            <div className='show-todo-user-modal'>\n                <div className='pos-rel'>\n                    <a\n                        className=\"btn-floating btn-small waves-effect waves-light red pos-btn-close\"\n                        onClick={props.closeTodo}\n                    >\n                        <i className=\"material-icons\">close</i></a>\n                    <ul className=\"collection\">\n                        {todos}\n                    </ul>\n                </div>\n            </div>\n        </div>\n    )\n}","D:\\ProgKievFullStack\\стажировка\\MERN-main\\MERN-main\\client\\src\\components\\todo\\ShowAndEditTodo.tsx",["246"],"import React, { useState } from 'react'\nimport { EditField } from \"../common/EditField\"\nimport { NameTodo } from \"./NameTodo\"\n\ntype ShowAndEditTodoPropsType = {\n    config: string,\n    toggleNameEditMode: () => void,\n    toggleDescEditMode: () => void,\n    update: () => void,\n    changeHandler: (e: React.ChangeEvent<HTMLInputElement>) => void,\n    editMode: boolean,\n    text: string | undefined,\n    loading: boolean,\n    isActive: boolean\n}\n\nexport const ShowAndEditTodo: React.FC<ShowAndEditTodoPropsType> = (props) => {\n\n    const changeEditMode = () => {\n        if (props.config === 'name') {\n            props.toggleNameEditMode()\n        } else {\n            props.toggleDescEditMode()\n        }\n    }\n\n    const changeField = () => {\n        props.update()\n    }\n\n    return (\n        <>\n            {props.editMode\n                ? <EditField\n                    config={props.config}\n                    text={props.text}\n                    changeHandler={props.changeHandler}\n                    changeField={changeField}\n                    loading={props.loading}\n                />\n                : <NameTodo\n                    config={props.config}\n                    changeInputEditMode={changeEditMode}\n                    name={props.text}\n                    isActive={props.isActive}\n                />\n            }\n        </>\n    )\n}","D:\\ProgKievFullStack\\стажировка\\MERN-main\\MERN-main\\client\\src\\components\\common\\MyMoment.tsx",[],"D:\\ProgKievFullStack\\стажировка\\MERN-main\\MERN-main\\client\\src\\components\\user\\ShowAndEdit.tsx",[],"D:\\ProgKievFullStack\\стажировка\\MERN-main\\MERN-main\\client\\src\\components\\common\\EditField.tsx",["247"],"import React from 'react'\n\ntype EditFieldPropsType = {\n    config: string,\n    changeHandler: (e: React.ChangeEvent<HTMLInputElement>) => void,\n    text: string,\n    changeField: () => void,\n    loading: boolean\n}\n\nexport const EditField: React.FC<EditFieldPropsType> = (props) => {\n    return (\n        <>\n            <>\n                <input\n                    id=\"updateName\"\n                    type=\"text\"\n                    className=\"yellow-input custom-input\"\n                    name={props.config}\n                    onChange={props.changeHandler}\n                    defaultValue={props.text}\n                />\n                <a\n                    className=\"cur-pointer none-style-a\"\n                    onClick={props.changeField}\n                    aria-disabled={props.loading}\n                >\n                    <i className=\"material-icons\">mode_edit</i>\n                </a>\n            </>\n        </>\n    )\n}","D:\\ProgKievFullStack\\стажировка\\MERN-main\\MERN-main\\client\\src\\components\\todo\\NameTodo.tsx",[],"D:\\ProgKievFullStack\\Git_Repositories\\MERNTS\\client\\src\\index.js",[],["248","249"],"D:\\ProgKievFullStack\\Git_Repositories\\MERNTS\\client\\src\\App.tsx",[],["250","251"],"D:\\ProgKievFullStack\\Git_Repositories\\MERNTS\\client\\src\\reportWebVitals.js",[],"D:\\ProgKievFullStack\\Git_Repositories\\MERNTS\\client\\src\\hooks\\authHook.ts",["252"],"import { useCallback, useEffect, useState } from \"react\"\r\nimport { VoidFunction } from \"../types/commonTypes\"\r\n\r\nconst storageName = 'userData'\r\n\r\ntype LocalStorageType = {\r\n    userId: number,\r\n    token: string,\r\n    email: string\r\n}\r\n\r\ntype UseAuthType = () => {\r\n    logout: VoidFunction,\r\n    ready: boolean,\r\n    login: (jwtToken: string, id: number, email: string) => void,\r\n    userId: number | null,\r\n    email: string | null,\r\n    token: string | null\r\n}\r\n\r\nexport const useAuth: UseAuthType = () => {\r\n    const [token, setToken] = useState<string | null>(null)\r\n    const [ready, setReady] = useState<boolean>(false)\r\n    const [userId, setUserId] = useState<number | null>(null)\r\n    const [email, setEmail] = useState<string | null>(null)\r\n\r\n    const login = useCallback((jwtToken: string, id: number, email: string) => {\r\n        setToken(jwtToken)\r\n        setUserId(id)\r\n        setEmail(email)\r\n\r\n        localStorage.setItem(storageName, JSON.stringify({\r\n            userId, token, email\r\n        }))\r\n    }, [])\r\n\r\n    const logout = useCallback(() => {\r\n        setToken(null)\r\n        setUserId(null)\r\n        setEmail(null)\r\n\r\n        localStorage.removeItem(storageName)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const data = JSON.parse(localStorage.getItem(storageName) || '[]') as LocalStorageType\r\n\r\n        if (data && data.token) {\r\n            login(data.token, data.userId, data.email)\r\n        }\r\n\r\n        setReady(true)\r\n    }, [login])\r\n\r\n    return { login, logout, token, userId, ready, email }\r\n}","D:\\ProgKievFullStack\\Git_Repositories\\MERNTS\\client\\src\\context\\AuthContext.ts",[],"D:\\ProgKievFullStack\\Git_Repositories\\MERNTS\\client\\src\\routes.tsx",[],"D:\\ProgKievFullStack\\Git_Repositories\\MERNTS\\client\\src\\components\\common\\Navbar.tsx",["253","254"],"import React, { useContext } from 'react'\r\nimport { AuthContext } from \"../../context/AuthContext\"\r\nimport { NavLink, Redirect } from \"react-router-dom\"\r\n\r\ntype logoutHandlerType = (e: React.MouseEvent) => JSX.Element\r\n\r\nexport const Navbar: React.FC = () => {\r\n    const auth = useContext(AuthContext)\r\n\r\n    const logoutHandler: logoutHandlerType = (e) => {\r\n        e.preventDefault()\r\n        auth.logout()\r\n        return <Redirect to='/' />\r\n    }\r\n\r\n    return (\r\n        <nav>\r\n            <div className=\"nav-wrapper pd-l-10\">\r\n                {auth.email === 'admin@mail.ru'\r\n                    ? <a href=\"#\" className=\"brand-logo center\">my Todo list</a>\r\n                    : <NavLink to=\"/todoList\"\r\n                        className=\"brand-logo center\"\r\n                    >\r\n                        my Todo list\r\n                    </NavLink>\r\n                }\r\n                <ul id=\"nav-mobile\" className=\"right \">\r\n                    {auth.email === 'admin@mail.ru'\r\n                        ? ''\r\n                        : <li>\r\n                            <NavLink to=\"/create\"\r\n                                className=\"btn-floating btn-small waves-effect waves-light  teal lighten-1\"\r\n                            >\r\n                                <i className=\"material-icons\">add</i>\r\n                            </NavLink>\r\n                        </li>\r\n                    }\r\n                    {auth.email === 'admin@mail.ru'\r\n                        ? ''\r\n                        : <li>\r\n                            <NavLink to=\"/profile\"\r\n                                className=\"btn-floating btn-small waves-effect waves-light yellow darken-3\"\r\n                            >\r\n                                <i className=\"material-icons\">account_box</i>\r\n                            </NavLink>\r\n                        </li>\r\n                    }\r\n                    <li>\r\n                        <a\r\n                            className=\"btn-floating btn-small waves-effect waves-light deep-orange lighten-2\"\r\n                            onClick={logoutHandler}\r\n                        >\r\n                            <i className=\"material-icons\">exit_to_app</i>\r\n                        </a>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    )\r\n}","D:\\ProgKievFullStack\\Git_Repositories\\MERNTS\\client\\src\\components\\common\\Preloader.tsx",[],"D:\\ProgKievFullStack\\Git_Repositories\\MERNTS\\client\\src\\pages\\AuthPage.tsx",[],"D:\\ProgKievFullStack\\Git_Repositories\\MERNTS\\client\\src\\pages\\TodoListPage.tsx",[],"D:\\ProgKievFullStack\\Git_Repositories\\MERNTS\\client\\src\\pages\\ProfilePage.tsx",[],"D:\\ProgKievFullStack\\Git_Repositories\\MERNTS\\client\\src\\pages\\CreateTodo.tsx",["255"],"import React, { useContext, useEffect, useState } from 'react'\r\nimport { useRequest } from \"../hooks/hookRequests\"\r\nimport { AuthContext } from \"../context/AuthContext\"\r\nimport { useMessage } from \"../hooks/messageHook\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { VoidFunction } from '../types/commonTypes'\r\n\r\ntype TodoType = {\r\n    name: string,\r\n    description: string\r\n}\r\n\r\nexport const CreateTodo: React.FC = (props) => {\r\n    const auth = useContext(AuthContext)\r\n    const message = useMessage()\r\n    let history = useHistory()\r\n    const { error, req, clearError, loading } = useRequest()\r\n    const [Todo, setTodo] = useState<TodoType>({ name: '', description: '' })\r\n\r\n\r\n    useEffect(() => {\r\n        message(error)\r\n        clearError()\r\n    }, [error, message, clearError])\r\n\r\n    const createTodo: VoidFunction = async () => {\r\n        try {\r\n            const data = await req('/api/todo/create', 'POST', { ...Todo }, { Authorization: `Baerer ${auth.token}` })\r\n\r\n            history.push('/todoList')\r\n\r\n        } catch (e) {\r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"card blue darken-1\">\r\n            <div className=\"card-content white-text\">\r\n                <span className=\"card-title\">Создание todo</span>\r\n                <div>\r\n                    <div className=\"input-field\">\r\n                        <input\r\n                            id=\"name\"\r\n                            type=\"text\"\r\n                            className=\"yellow-input\"\r\n                            name=\"name\"\r\n                            value={Todo.name}\r\n                            onChange={e => setTodo({ ...Todo, name: e.target.value, description: Todo.description })}\r\n                        />\r\n                        <label htmlFor=\"name\">Название</label>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <textarea\r\n                            id=\"desc\"\r\n                            className=\"materialize-textarea\"\r\n                            name=\"description\"\r\n                            value={Todo.description}\r\n                            onChange={e => setTodo({ ...Todo, description: e.target.value, name: Todo.name })}\r\n                        ></textarea>\r\n                        <label htmlFor=\"desc\">Описание</label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"card-action dflex-sb\">\r\n                <button\r\n                    className=\"btn green lighten-1\"\r\n                    type=\"submit\"\r\n                    name=\"action\"\r\n                    onClick={createTodo}\r\n                    disabled={loading}\r\n                >\r\n                    Создать\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","D:\\ProgKievFullStack\\Git_Repositories\\MERNTS\\client\\src\\pages\\Admin.tsx",[],"D:\\ProgKievFullStack\\Git_Repositories\\MERNTS\\client\\src\\hooks\\hookRequests.ts",[],"D:\\ProgKievFullStack\\Git_Repositories\\MERNTS\\client\\src\\hooks\\messageHook.ts",[],"D:\\ProgKievFullStack\\Git_Repositories\\MERNTS\\client\\src\\components\\auth\\login.tsx",[],"D:\\ProgKievFullStack\\Git_Repositories\\MERNTS\\client\\src\\components\\auth\\register.tsx",[],"D:\\ProgKievFullStack\\Git_Repositories\\MERNTS\\client\\src\\components\\todo\\Todo.tsx",[],"D:\\ProgKievFullStack\\Git_Repositories\\MERNTS\\client\\src\\components\\user\\ProfileInfo.tsx",["256"],"import React, {useState} from 'react'\r\nimport {ShowAndEdit} from \"./ShowAndEdit\"\r\nimport {EditField} from \"../common/EditField\"\r\nimport {IUser} from '../../Interface/IUser'\r\nimport { VoidFunction } from '../../types/commonTypes'\r\n\r\ntype ProfileInfoPropsType = {\r\n    updatePassword: VoidFunction,\r\n    user: IUser,\r\n    changeHandler: (e: React.ChangeEvent<HTMLInputElement>) => void,\r\n    updateProfile: VoidFunction,\r\n    loading: boolean,\r\n    deleteUser: (e: React.MouseEvent) => void\r\n}\r\n\r\nexport const ProfileInfo: React.FC<ProfileInfoPropsType> = (props) => {\r\n    const [editMode, setEditMode] = useState<Boolean>(false)\r\n\r\n    const changePassword: VoidFunction = () => {\r\n        props.updatePassword()\r\n\r\n        setEditMode(!editMode)\r\n    }\r\n\r\n    return (\r\n        <div className='mg-top-10'>\r\n            <ul className=\"collection with-header\">\r\n                <li className=\"collection-header\">\r\n                    <h5>Имя</h5>\r\n                </li>\r\n                <ShowAndEdit\r\n                    text={props.user.name}\r\n                    config={'name'}\r\n                    changeHandler={props.changeHandler}\r\n                    update={props.updateProfile}\r\n                    loading={props.loading}\r\n                />\r\n                <li className=\"collection-header\">\r\n                    <h5>Фамилия</h5>\r\n                </li>\r\n                <ShowAndEdit\r\n                    text={props.user.lastName}\r\n                    config={'lastName'}\r\n                    changeHandler={props.changeHandler}\r\n                    update={props.updateProfile}\r\n                    loading={props.loading}\r\n                />\r\n                <li className=\"collection-header\">\r\n                    <h5>Email</h5>\r\n                </li>\r\n                <li className=\"collection-header\">\r\n                    <div>\r\n                        {props.user.email}\r\n                    </div>\r\n                </li>\r\n                <li className=\"collection-header\">\r\n                    <h5>Пароль</h5>\r\n                </li>\r\n                <li className=\"collection-item cur-pointer\">\r\n                    {!editMode\r\n                        ? <div>\r\n                            Изменить пароль\r\n                            <a\r\n                                href=\"#!\"\r\n                                className=\"secondary-content\"\r\n                                onClick={() => setEditMode(!editMode)}\r\n                            >\r\n                                <i className=\"material-icons\">edit</i>\r\n                            </a>\r\n                        </div>\r\n                        : <EditField\r\n                            config={'password'}\r\n                            text={''}\r\n                            changeHandler={props.changeHandler}\r\n                            changeField={changePassword}\r\n                            loading={props.loading}\r\n                        />\r\n                    }\r\n                </li>\r\n            </ul>\r\n            <a\r\n                className=\"waves-effect waves-light btn-small red darken-1 float-right\"\r\n                onClick={(e) => props.deleteUser(e)}\r\n            >\r\n                <i className=\"material-icons right\">delete</i>\r\n                Удалить профиль\r\n            </a>\r\n        </div>\r\n    )\r\n}","D:\\ProgKievFullStack\\Git_Repositories\\MERNTS\\client\\src\\components\\admin\\Users.tsx",["257","258","259","260"],"import React from 'react'\r\nimport { IUser } from '../../Interface/IUser'\r\n\r\ntype UsersPropsType = {\r\n    user: IUser,\r\n    getTodoUser: (id: number | undefined) => void,\r\n    changeStatusUser: (id: number | undefined) => void,\r\n    deleteUser: (id: number | undefined) => void\r\n}\r\n\r\nexport const Users: React.FC<UsersPropsType> = (props) => {\r\n    return (\r\n        <>\r\n            <tr>\r\n                <td>{props.user.email}</td>\r\n                <td>\r\n                    {props.user.status\r\n                        ? 'Забанен'\r\n                        : 'Не забанен'\r\n                    }\r\n                </td>\r\n                <td>\r\n                    <a\r\n                        className=\"waves-effect waves-light btn modal-trigger\"\r\n                        onClick={() => props.getTodoUser(props.user._id)}\r\n                    >\r\n                        Показать todo\r\n                    </a>\r\n                </td>\r\n                <td>\r\n                    {props.user.status\r\n                        ? <a\r\n                            className=\"waves-effect waves-light btn-small blue lighten-2\"\r\n                            onClick={() => props.changeStatusUser(props.user._id)}\r\n                        >\r\n                            Разбанить\r\n                        </a>\r\n                        : <a\r\n                            className=\"waves-effect waves-light btn-small red darken-1\"\r\n                            onClick={() => props.changeStatusUser(props.user._id)}\r\n                        >\r\n                            Забанить\r\n                        </a>\r\n                    }\r\n                </td>\r\n                <td>\r\n                    <a\r\n                        className=\"waves-effect waves-light btn-small\"\r\n                        onClick={() => props.deleteUser(props.user._id)}\r\n                    >\r\n                        Удалить пользователя\r\n                    </a>\r\n                </td>\r\n            </tr>\r\n\r\n            <div id=\"modal1\" className=\"modal bottom-sheet\">\r\n                <div className=\"modal-content\">\r\n                    <h4>Modal Header</h4>\r\n                    <p>A bunch of text</p>\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                    <a href=\"#!\" className=\"modal-close waves-effect waves-green btn-flat\">Agree</a>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}","D:\\ProgKievFullStack\\Git_Repositories\\MERNTS\\client\\src\\components\\admin\\ShowTodoUser.tsx",["261","262"],"import React from 'react'\r\nimport { ITodo } from '../../Interface/ITodo'\r\nimport { VoidFunction } from '../../types/commonTypes'\r\n\r\ntype ShowTodoUsersPropsType = {\r\n    todos: Array<ITodo>,\r\n    closeTodo: VoidFunction\r\n}\r\n\r\nexport const ShowTodoUsers: React.FC<ShowTodoUsersPropsType> = (props) => {\r\n    let todos = null\r\n    if (props.todos.length > 0) {\r\n        todos = props.todos.map(t => <li key={t._id} className=\"collection-item\">{t.name}</li>)\r\n    } else {\r\n        return (\r\n            <div className='shadow'>\r\n                <div className='show-todo-user-modal'>\r\n                    <div className='pos-rel'>\r\n                        <a\r\n                            className=\"btn-floating btn-small waves-effect waves-light red pos-btn-close\"\r\n                            onClick={props.closeTodo}\r\n                        >\r\n                            <i className=\"material-icons\">close</i>\r\n                        </a>\r\n                        <ul className=\"collection\">\r\n                            <li className=\"collection-item\">У етого пользователя нет todo</li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className='shadow'>\r\n            <div className='show-todo-user-modal'>\r\n                <div className='pos-rel'>\r\n                    <a\r\n                        className=\"btn-floating btn-small waves-effect waves-light red pos-btn-close\"\r\n                        onClick={props.closeTodo}\r\n                    >\r\n                        <i className=\"material-icons\">close</i></a>\r\n                    <ul className=\"collection\">\r\n                        {todos}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","D:\\ProgKievFullStack\\Git_Repositories\\MERNTS\\client\\src\\components\\user\\ShowAndEdit.tsx",[],"D:\\ProgKievFullStack\\Git_Repositories\\MERNTS\\client\\src\\components\\todo\\ShowAndEditTodo.tsx",["263"],"import React, { useState } from 'react'\r\nimport { VoidFunction } from '../../types/commonTypes'\r\nimport { EditField } from \"../common/EditField\"\r\nimport { NameTodo } from \"./NameTodo\"\r\n\r\ntype ShowAndEditTodoPropsType = {\r\n    config: string,\r\n    toggleNameEditMode: VoidFunction,\r\n    toggleDescEditMode: VoidFunction,\r\n    update: VoidFunction,\r\n    changeHandler: (e: React.ChangeEvent<HTMLInputElement>) => void,\r\n    editMode: boolean,\r\n    text: string | undefined,\r\n    loading: boolean,\r\n    isActive: boolean\r\n}\r\n\r\nexport const ShowAndEditTodo: React.FC<ShowAndEditTodoPropsType> = (props) => {\r\n\r\n    const changeEditMode: VoidFunction = () => {\r\n        if (props.config === 'name') {\r\n            props.toggleNameEditMode()\r\n        } else {\r\n            props.toggleDescEditMode()\r\n        }\r\n    }\r\n\r\n    const changeField:VoidFunction = () => {\r\n        props.update()\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {props.editMode\r\n                ? <EditField\r\n                    config={props.config}\r\n                    text={props.text}\r\n                    changeHandler={props.changeHandler}\r\n                    changeField={changeField}\r\n                    loading={props.loading}\r\n                />\r\n                : <NameTodo\r\n                    config={props.config}\r\n                    changeInputEditMode={changeEditMode}\r\n                    name={props.text}\r\n                    isActive={props.isActive}\r\n                />\r\n            }\r\n        </>\r\n    )\r\n}","D:\\ProgKievFullStack\\Git_Repositories\\MERNTS\\client\\src\\components\\common\\MyMoment.tsx",[],"D:\\ProgKievFullStack\\Git_Repositories\\MERNTS\\client\\src\\components\\common\\EditField.tsx",["264"],"import React from 'react'\r\nimport { VoidFunction } from '../../types/commonTypes'\r\n\r\ntype EditFieldPropsType = {\r\n    config: string,\r\n    changeHandler: (e: React.ChangeEvent<HTMLInputElement>) => void,\r\n    text: string | undefined,\r\n    changeField: VoidFunction,\r\n    loading: boolean\r\n}\r\n\r\nexport const EditField: React.FC<EditFieldPropsType> = (props) => {\r\n    return (\r\n        <>\r\n            <>\r\n                <input\r\n                    id=\"updateName\"\r\n                    type=\"text\"\r\n                    className=\"yellow-input custom-input\"\r\n                    name={props.config}\r\n                    onChange={props.changeHandler}\r\n                    defaultValue={props.text}\r\n                />\r\n                <a\r\n                    className=\"cur-pointer none-style-a\"\r\n                    onClick={props.changeField}\r\n                    aria-disabled={props.loading}\r\n                >\r\n                    <i className=\"material-icons\">mode_edit</i>\r\n                </a>\r\n            </>\r\n        </>\r\n    )\r\n}","D:\\ProgKievFullStack\\Git_Repositories\\MERNTS\\client\\src\\components\\todo\\NameTodo.tsx",[],{"ruleId":"265","replacedBy":"266"},{"ruleId":"267","replacedBy":"268"},{"ruleId":"265","replacedBy":"266"},{"ruleId":"267","replacedBy":"268"},{"ruleId":"269","severity":1,"message":"270","line":22,"column":19,"nodeType":"271","messageId":"272","endLine":22,"endColumn":23},{"ruleId":"273","severity":1,"message":"274","line":34,"column":8,"nodeType":"275","endLine":34,"endColumn":10,"suggestions":"276"},{"ruleId":"277","severity":1,"message":"278","line":20,"column":23,"nodeType":"279","endLine":20,"endColumn":65},{"ruleId":"277","severity":1,"message":"280","line":49,"column":25,"nodeType":"279","endLine":52,"endColumn":26},{"ruleId":"277","severity":1,"message":"280","line":80,"column":13,"nodeType":"279","endLine":83,"endColumn":14},{"ruleId":"277","severity":1,"message":"280","line":23,"column":21,"nodeType":"279","endLine":26,"endColumn":22},{"ruleId":"277","severity":1,"message":"280","line":32,"column":27,"nodeType":"279","endLine":35,"endColumn":26},{"ruleId":"277","severity":1,"message":"280","line":38,"column":27,"nodeType":"279","endLine":41,"endColumn":26},{"ruleId":"277","severity":1,"message":"280","line":47,"column":21,"nodeType":"279","endLine":50,"endColumn":22},{"ruleId":"277","severity":1,"message":"280","line":18,"column":25,"nodeType":"279","endLine":21,"endColumn":26},{"ruleId":"277","severity":1,"message":"280","line":37,"column":21,"nodeType":"279","endLine":40,"endColumn":22},{"ruleId":"269","severity":1,"message":"281","line":1,"column":17,"nodeType":"271","messageId":"272","endLine":1,"endColumn":25},{"ruleId":"277","severity":1,"message":"280","line":23,"column":17,"nodeType":"279","endLine":27,"endColumn":18},{"ruleId":"265","replacedBy":"282"},{"ruleId":"267","replacedBy":"283"},{"ruleId":"265","replacedBy":"282"},{"ruleId":"267","replacedBy":"283"},{"ruleId":"273","severity":1,"message":"274","line":35,"column":8,"nodeType":"275","endLine":35,"endColumn":10,"suggestions":"284"},{"ruleId":"277","severity":1,"message":"278","line":20,"column":23,"nodeType":"279","endLine":20,"endColumn":65},{"ruleId":"277","severity":1,"message":"280","line":49,"column":25,"nodeType":"279","endLine":52,"endColumn":26},{"ruleId":"269","severity":1,"message":"270","line":28,"column":19,"nodeType":"271","messageId":"272","endLine":28,"endColumn":23},{"ruleId":"277","severity":1,"message":"280","line":81,"column":13,"nodeType":"279","endLine":84,"endColumn":14},{"ruleId":"277","severity":1,"message":"280","line":23,"column":21,"nodeType":"279","endLine":26,"endColumn":22},{"ruleId":"277","severity":1,"message":"280","line":32,"column":27,"nodeType":"279","endLine":35,"endColumn":26},{"ruleId":"277","severity":1,"message":"280","line":38,"column":27,"nodeType":"279","endLine":41,"endColumn":26},{"ruleId":"277","severity":1,"message":"280","line":47,"column":21,"nodeType":"279","endLine":50,"endColumn":22},{"ruleId":"277","severity":1,"message":"280","line":19,"column":25,"nodeType":"279","endLine":22,"endColumn":26},{"ruleId":"277","severity":1,"message":"280","line":38,"column":21,"nodeType":"279","endLine":41,"endColumn":22},{"ruleId":"269","severity":1,"message":"281","line":1,"column":17,"nodeType":"271","messageId":"272","endLine":1,"endColumn":25},{"ruleId":"277","severity":1,"message":"280","line":24,"column":17,"nodeType":"279","endLine":28,"endColumn":18},"no-native-reassign",["285"],"no-negated-in-lhs",["286"],"@typescript-eslint/no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useCallback has missing dependencies: 'token' and 'userId'. Either include them or remove the dependency array.","ArrayExpression",["287"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'useState' is defined but never used.",["285"],["286"],["288"],"no-global-assign","no-unsafe-negation",{"desc":"289","fix":"290"},{"desc":"289","fix":"291"},"Update the dependencies array to be: [token, userId]",{"range":"292","text":"293"},{"range":"294","text":"293"},[942,944],"[token, userId]",[1030,1032]]
