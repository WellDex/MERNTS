[{"D:\\ProgKievFullStack\\стажировка\\MERN-main\\MERN-main\\client\\src\\index.js":"1","D:\\ProgKievFullStack\\стажировка\\MERN-main\\MERN-main\\client\\src\\reportWebVitals.js":"2","D:\\ProgKievFullStack\\стажировка\\MERN-main\\MERN-main\\client\\src\\components\\auth\\login.tsx":"3","D:\\ProgKievFullStack\\стажировка\\MERN-main\\MERN-main\\client\\src\\App.tsx":"4","D:\\ProgKievFullStack\\стажировка\\MERN-main\\MERN-main\\client\\src\\routes.tsx":"5","D:\\ProgKievFullStack\\стажировка\\MERN-main\\MERN-main\\client\\src\\components\\common\\Preloader.tsx":"6","D:\\ProgKievFullStack\\стажировка\\MERN-main\\MERN-main\\client\\src\\pages\\CreateTodo.tsx":"7","D:\\ProgKievFullStack\\стажировка\\MERN-main\\MERN-main\\client\\src\\pages\\AuthPage.tsx":"8","D:\\ProgKievFullStack\\стажировка\\MERN-main\\MERN-main\\client\\src\\pages\\ProfilePage.tsx":"9","D:\\ProgKievFullStack\\стажировка\\MERN-main\\MERN-main\\client\\src\\pages\\TodoListPage.tsx":"10","D:\\ProgKievFullStack\\стажировка\\MERN-main\\MERN-main\\client\\src\\pages\\Admin.tsx":"11","D:\\ProgKievFullStack\\стажировка\\MERN-main\\MERN-main\\client\\src\\components\\auth\\register.tsx":"12","D:\\ProgKievFullStack\\стажировка\\MERN-main\\MERN-main\\client\\src\\context\\AuthContext.ts":"13","D:\\ProgKievFullStack\\стажировка\\MERN-main\\MERN-main\\client\\src\\hooks\\authHook.ts":"14","D:\\ProgKievFullStack\\стажировка\\MERN-main\\MERN-main\\client\\src\\hooks\\messageHook.ts":"15","D:\\ProgKievFullStack\\стажировка\\MERN-main\\MERN-main\\client\\src\\hooks\\hookRequests.ts":"16","D:\\ProgKievFullStack\\стажировка\\MERN-main\\MERN-main\\client\\src\\components\\common\\Navbar.tsx":"17","D:\\ProgKievFullStack\\стажировка\\MERN-main\\MERN-main\\client\\src\\components\\todo\\Todo.tsx":"18","D:\\ProgKievFullStack\\стажировка\\MERN-main\\MERN-main\\client\\src\\components\\user\\ProfileInfo.tsx":"19","D:\\ProgKievFullStack\\стажировка\\MERN-main\\MERN-main\\client\\src\\components\\admin\\Users.tsx":"20","D:\\ProgKievFullStack\\стажировка\\MERN-main\\MERN-main\\client\\src\\components\\admin\\ShowTodoUser.tsx":"21","D:\\ProgKievFullStack\\стажировка\\MERN-main\\MERN-main\\client\\src\\components\\todo\\ShowAndEditTodo.tsx":"22","D:\\ProgKievFullStack\\стажировка\\MERN-main\\MERN-main\\client\\src\\components\\common\\MyMoment.tsx":"23","D:\\ProgKievFullStack\\стажировка\\MERN-main\\MERN-main\\client\\src\\components\\user\\ShowAndEdit.tsx":"24","D:\\ProgKievFullStack\\стажировка\\MERN-main\\MERN-main\\client\\src\\components\\common\\EditField.tsx":"25","D:\\ProgKievFullStack\\стажировка\\MERN-main\\MERN-main\\client\\src\\components\\todo\\NameTodo.tsx":"26"},{"size":508,"mtime":1614811557520,"results":"27","hashOfConfig":"28"},{"size":362,"mtime":1612800019000,"results":"29","hashOfConfig":"28"},{"size":2280,"mtime":1615036059092,"results":"30","hashOfConfig":"28"},{"size":898,"mtime":1615036787166,"results":"31","hashOfConfig":"28"},{"size":1348,"mtime":1615027166696,"results":"32","hashOfConfig":"28"},{"size":730,"mtime":1614810819646,"results":"33","hashOfConfig":"28"},{"size":2619,"mtime":1615027441658,"results":"34","hashOfConfig":"28"},{"size":2557,"mtime":1614809576443,"results":"35","hashOfConfig":"28"},{"size":2818,"mtime":1615037721890,"results":"36","hashOfConfig":"28"},{"size":3814,"mtime":1615036559841,"results":"37","hashOfConfig":"28"},{"size":3190,"mtime":1615036015618,"results":"38","hashOfConfig":"28"},{"size":3351,"mtime":1615036078407,"results":"39","hashOfConfig":"28"},{"size":447,"mtime":1615029819810,"results":"40","hashOfConfig":"28"},{"size":1431,"mtime":1615037152309,"results":"41","hashOfConfig":"28"},{"size":330,"mtime":1615030853501,"results":"42","hashOfConfig":"28"},{"size":1199,"mtime":1615037593137,"results":"43","hashOfConfig":"28"},{"size":2275,"mtime":1615031602973,"results":"44","hashOfConfig":"28"},{"size":3212,"mtime":1615037812557,"results":"45","hashOfConfig":"28"},{"size":3195,"mtime":1615037721859,"results":"46","hashOfConfig":"28"},{"size":2399,"mtime":1615036033776,"results":"47","hashOfConfig":"28"},{"size":1722,"mtime":1615034776865,"results":"48","hashOfConfig":"28"},{"size":1364,"mtime":1615037812572,"results":"49","hashOfConfig":"28"},{"size":275,"mtime":1615036114939,"results":"50","hashOfConfig":"28"},{"size":1304,"mtime":1615037721871,"results":"51","hashOfConfig":"28"},{"size":950,"mtime":1615037812528,"results":"52","hashOfConfig":"28"},{"size":527,"mtime":1615037812541,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"oa25xq",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"61"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"61"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"61"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"61"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"61"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"61"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"61"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"61"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\ProgKievFullStack\\стажировка\\MERN-main\\MERN-main\\client\\src\\index.js",[],["116","117"],"D:\\ProgKievFullStack\\стажировка\\MERN-main\\MERN-main\\client\\src\\reportWebVitals.js",[],"D:\\ProgKievFullStack\\стажировка\\MERN-main\\MERN-main\\client\\src\\components\\auth\\login.tsx",[],["118","119"],"D:\\ProgKievFullStack\\стажировка\\MERN-main\\MERN-main\\client\\src\\App.tsx",[],"D:\\ProgKievFullStack\\стажировка\\MERN-main\\MERN-main\\client\\src\\routes.tsx",[],"D:\\ProgKievFullStack\\стажировка\\MERN-main\\MERN-main\\client\\src\\components\\common\\Preloader.tsx",[],"D:\\ProgKievFullStack\\стажировка\\MERN-main\\MERN-main\\client\\src\\pages\\CreateTodo.tsx",["120"],"import React, { useContext, useEffect, useState } from 'react'\nimport { useRequest } from \"../hooks/hookRequests\"\nimport { AuthContext } from \"../context/AuthContext\"\nimport { useMessage } from \"../hooks/messageHook\"\nimport { useHistory } from \"react-router-dom\"\n\nexport const CreateTodo: React.FC = (props) => {\n    const auth = useContext(AuthContext)\n    const message = useMessage()\n    let history = useHistory()\n    const { error, req, clearError, loading } = useRequest()\n    const [Todo, setTodo] = useState({ name: '', description: '' })\n\n\n    useEffect(() => {\n        message(error)\n        clearError()\n    }, [error, message, clearError])\n\n    const createTodo = async () => {\n        try {\n            const data = await req('/api/todo/create', 'POST', { ...Todo }, { Authorization: `Baerer ${auth.token}` })\n\n            history.push('/todoList')\n\n        } catch (e) {\n\n        }\n    }\n\n    return (\n        <div className=\"card blue darken-1\">\n            <div className=\"card-content white-text\">\n                <span className=\"card-title\">Создание todo</span>\n                <div>\n                    <div className=\"input-field\">\n                        <input\n                            id=\"name\"\n                            type=\"text\"\n                            className=\"yellow-input\"\n                            name=\"name\"\n                            value={Todo.name}\n                            onChange={e => setTodo({ ...Todo, name: e.target.value, description: Todo.description })}\n                        />\n                        <label htmlFor=\"name\">Название</label>\n                    </div>\n                    <div className=\"input-field\">\n                        <textarea\n                            id=\"desc\"\n                            className=\"materialize-textarea\"\n                            name=\"description\"\n                            value={Todo.description}\n                            onChange={e => setTodo({ ...Todo, description: e.target.value, name: Todo.name })}\n                        ></textarea>\n                        <label htmlFor=\"desc\">Описание</label>\n                    </div>\n                </div>\n            </div>\n            <div className=\"card-action dflex-sb\">\n                <button\n                    className=\"btn green lighten-1\"\n                    type=\"submit\"\n                    name=\"action\"\n                    onClick={createTodo}\n                    disabled={loading}\n                >\n                    Создать\n                </button>\n            </div>\n        </div>\n    )\n}\n","D:\\ProgKievFullStack\\стажировка\\MERN-main\\MERN-main\\client\\src\\pages\\AuthPage.tsx",[],"D:\\ProgKievFullStack\\стажировка\\MERN-main\\MERN-main\\client\\src\\pages\\ProfilePage.tsx",[],"D:\\ProgKievFullStack\\стажировка\\MERN-main\\MERN-main\\client\\src\\pages\\TodoListPage.tsx",[],"D:\\ProgKievFullStack\\стажировка\\MERN-main\\MERN-main\\client\\src\\pages\\Admin.tsx",[],"D:\\ProgKievFullStack\\стажировка\\MERN-main\\MERN-main\\client\\src\\components\\auth\\register.tsx",[],"D:\\ProgKievFullStack\\стажировка\\MERN-main\\MERN-main\\client\\src\\context\\AuthContext.ts",[],"D:\\ProgKievFullStack\\стажировка\\MERN-main\\MERN-main\\client\\src\\hooks\\authHook.ts",["121"],"import { useCallback, useEffect, useState } from \"react\"\n\nconst storageName = 'userData'\n\ntype LocalStorageType = {\n    userId: number,\n    token: string,\n    email: string\n}\n\ntype UseAuthType = () => {\n    logout: () => void,\n    ready: boolean,\n    login: (jwtToken: string, id: number, email: string) => void,\n    userId: number | null,\n    email: string | null,\n    token: string | null\n}\n\nexport const useAuth: UseAuthType = () => {\n    const [token, setToken] = useState<string | null>(null)\n    const [ready, setReady] = useState<boolean>(false)\n    const [userId, setUserId] = useState<number | null>(null)\n    const [email, setEmail] = useState<string | null>(null)\n\n    const login = useCallback((jwtToken: string, id: number, email: string) => {\n        setToken(jwtToken)\n        setUserId(id)\n        setEmail(email)\n\n        localStorage.setItem(storageName, JSON.stringify({\n            userId, token, email\n        }))\n    }, [])\n\n    const logout = useCallback(() => {\n        setToken(null)\n        setUserId(null)\n        setEmail(null)\n\n        localStorage.removeItem(storageName)\n    }, [])\n\n    useEffect(() => {\n        const data = JSON.parse(localStorage.getItem(storageName) || '[]') as LocalStorageType\n\n        if (data && data.token) {\n            login(data.token, data.userId, data.email)\n        }\n\n        setReady(true)\n    }, [login])\n\n    return { login, logout, token, userId, ready, email }\n}","D:\\ProgKievFullStack\\стажировка\\MERN-main\\MERN-main\\client\\src\\hooks\\messageHook.ts",[],"D:\\ProgKievFullStack\\стажировка\\MERN-main\\MERN-main\\client\\src\\hooks\\hookRequests.ts",[],"D:\\ProgKievFullStack\\стажировка\\MERN-main\\MERN-main\\client\\src\\components\\common\\Navbar.tsx",["122","123"],"import React, { useContext } from 'react'\nimport { AuthContext } from \"../../context/AuthContext\"\nimport { NavLink, Redirect } from \"react-router-dom\"\n\ntype logoutHandlerType = (e: React.MouseEvent) => JSX.Element\n\nexport const Navbar: React.FC = () => {\n    const auth = useContext(AuthContext)\n\n    const logoutHandler: logoutHandlerType = (e) => {\n        e.preventDefault()\n        auth.logout()\n        return <Redirect to='/' />\n    }\n\n    return (\n        <nav>\n            <div className=\"nav-wrapper pd-l-10\">\n                {auth.email === 'admin@mail.ru'\n                    ? <a href=\"#\" className=\"brand-logo center\">my Todo list</a>\n                    : <NavLink to=\"/todoList\"\n                        className=\"brand-logo center\"\n                    >\n                        my Todo list\n                    </NavLink>\n                }\n                <ul id=\"nav-mobile\" className=\"right \">\n                    {auth.email === 'admin@mail.ru'\n                        ? ''\n                        : <li>\n                            <NavLink to=\"/create\"\n                                className=\"btn-floating btn-small waves-effect waves-light  teal lighten-1\"\n                            >\n                                <i className=\"material-icons\">add</i>\n                            </NavLink>\n                        </li>\n                    }\n                    {auth.email === 'admin@mail.ru'\n                        ? ''\n                        : <li>\n                            <NavLink to=\"/profile\"\n                                className=\"btn-floating btn-small waves-effect waves-light yellow darken-3\"\n                            >\n                                <i className=\"material-icons\">account_box</i>\n                            </NavLink>\n                        </li>\n                    }\n                    <li>\n                        <a\n                            className=\"btn-floating btn-small waves-effect waves-light deep-orange lighten-2\"\n                            onClick={logoutHandler}\n                        >\n                            <i className=\"material-icons\">exit_to_app</i>\n                        </a>\n                    </li>\n                </ul>\n            </div>\n        </nav>\n    )\n}","D:\\ProgKievFullStack\\стажировка\\MERN-main\\MERN-main\\client\\src\\components\\todo\\Todo.tsx",[],"D:\\ProgKievFullStack\\стажировка\\MERN-main\\MERN-main\\client\\src\\components\\user\\ProfileInfo.tsx",["124"],"import React, {useState} from 'react'\nimport {ShowAndEdit} from \"./ShowAndEdit\"\nimport {EditField} from \"../common/EditField\"\nimport {IUser} from '../../Interface/IUser'\n\ntype ProfileInfoPropsType = {\n    updatePassword: () => void,\n    user: IUser,\n    changeHandler: (e: React.ChangeEvent<HTMLInputElement>) => void,\n    updateProfile: () => void,\n    loading: boolean,\n    deleteUser: (e: React.MouseEvent) => void\n}\n\nexport const ProfileInfo: React.FC<ProfileInfoPropsType> = (props) => {\n    const [editMode, setEditMode] = useState<Boolean>(false)\n\n    const changePassword = () => {\n        props.updatePassword()\n\n        setEditMode(!editMode)\n    }\n\n    return (\n        <div className='mg-top-10'>\n            <ul className=\"collection with-header\">\n                <li className=\"collection-header\">\n                    <h5>Имя</h5>\n                </li>\n                <ShowAndEdit\n                    text={props.user.name}\n                    config={'name'}\n                    changeHandler={props.changeHandler}\n                    update={props.updateProfile}\n                    loading={props.loading}\n                />\n                <li className=\"collection-header\">\n                    <h5>Фамилия</h5>\n                </li>\n                <ShowAndEdit\n                    text={props.user.lastName}\n                    config={'lastName'}\n                    changeHandler={props.changeHandler}\n                    update={props.updateProfile}\n                    loading={props.loading}\n                />\n                <li className=\"collection-header\">\n                    <h5>Email</h5>\n                </li>\n                <li className=\"collection-header\">\n                    <div>\n                        {props.user.email}\n                    </div>\n                </li>\n                <li className=\"collection-header\">\n                    <h5>Пароль</h5>\n                </li>\n                <li className=\"collection-item cur-pointer\">\n                    {!editMode\n                        ? <div>\n                            Изменить пароль\n                            <a\n                                href=\"#!\"\n                                className=\"secondary-content\"\n                                onClick={() => setEditMode(!editMode)}\n                            >\n                                <i className=\"material-icons\">edit</i>\n                            </a>\n                        </div>\n                        : <EditField\n                            config={'password'}\n                            text={''}\n                            changeHandler={props.changeHandler}\n                            changeField={changePassword}\n                            loading={props.loading}\n                        />\n                    }\n                </li>\n            </ul>\n            <a\n                className=\"waves-effect waves-light btn-small red darken-1 float-right\"\n                onClick={(e) => props.deleteUser(e)}\n            >\n                <i className=\"material-icons right\">delete</i>\n                Удалить профиль\n            </a>\n        </div>\n    )\n}","D:\\ProgKievFullStack\\стажировка\\MERN-main\\MERN-main\\client\\src\\components\\admin\\Users.tsx",["125","126","127","128"],"import React from 'react'\nimport { IUser } from '../../Interface/IUser'\n\ntype UsersPropsType = {\n    user: IUser,\n    getTodoUser: (id: number | undefined) => void,\n    changeStatusUser: (id: number | undefined) => void,\n    deleteUser: (id: number | undefined) => void\n}\n\nexport const Users: React.FC<UsersPropsType> = (props) => {\n    return (\n        <>\n            <tr>\n                <td>{props.user.email}</td>\n                <td>\n                    {props.user.status\n                        ? 'Забанен'\n                        : 'Не забанен'\n                    }\n                </td>\n                <td>\n                    <a\n                        className=\"waves-effect waves-light btn modal-trigger\"\n                        onClick={() => props.getTodoUser(props.user._id)}\n                    >\n                        Показать todo\n                    </a>\n                </td>\n                <td>\n                    {props.user.status\n                        ? <a\n                            className=\"waves-effect waves-light btn-small blue lighten-2\"\n                            onClick={() => props.changeStatusUser(props.user._id)}\n                        >\n                            Разбанить\n                        </a>\n                        : <a\n                            className=\"waves-effect waves-light btn-small red darken-1\"\n                            onClick={() => props.changeStatusUser(props.user._id)}\n                        >\n                            Забанить\n                        </a>\n                    }\n                </td>\n                <td>\n                    <a\n                        className=\"waves-effect waves-light btn-small\"\n                        onClick={() => props.deleteUser(props.user._id)}\n                    >\n                        Удалить пользователя\n                    </a>\n                </td>\n            </tr>\n\n            <div id=\"modal1\" className=\"modal bottom-sheet\">\n                <div className=\"modal-content\">\n                    <h4>Modal Header</h4>\n                    <p>A bunch of text</p>\n                </div>\n                <div className=\"modal-footer\">\n                    <a href=\"#!\" className=\"modal-close waves-effect waves-green btn-flat\">Agree</a>\n                </div>\n            </div>\n        </>\n    )\n}","D:\\ProgKievFullStack\\стажировка\\MERN-main\\MERN-main\\client\\src\\components\\admin\\ShowTodoUser.tsx",["129","130"],"import React from 'react'\nimport { ITodo } from '../../Interface/ITodo'\n\ntype ShowTodoUsersPropsType = {\n    todos: Array<ITodo>,\n    closeTodo: () => void\n}\n\nexport const ShowTodoUsers: React.FC<ShowTodoUsersPropsType> = (props) => {\n    let todos = null\n    if (props.todos.length > 0) {\n        todos = props.todos.map(t => <li key={t._id} className=\"collection-item\">{t.name}</li>)\n    } else {\n        return (\n            <div className='shadow'>\n                <div className='show-todo-user-modal'>\n                    <div className='pos-rel'>\n                        <a\n                            className=\"btn-floating btn-small waves-effect waves-light red pos-btn-close\"\n                            onClick={props.closeTodo}\n                        >\n                            <i className=\"material-icons\">close</i>\n                        </a>\n                        <ul className=\"collection\">\n                            <li className=\"collection-item\">У етого пользователя нет todo</li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n    return (\n        <div className='shadow'>\n            <div className='show-todo-user-modal'>\n                <div className='pos-rel'>\n                    <a\n                        className=\"btn-floating btn-small waves-effect waves-light red pos-btn-close\"\n                        onClick={props.closeTodo}\n                    >\n                        <i className=\"material-icons\">close</i></a>\n                    <ul className=\"collection\">\n                        {todos}\n                    </ul>\n                </div>\n            </div>\n        </div>\n    )\n}","D:\\ProgKievFullStack\\стажировка\\MERN-main\\MERN-main\\client\\src\\components\\todo\\ShowAndEditTodo.tsx",["131"],"import React, { useState } from 'react'\nimport { EditField } from \"../common/EditField\"\nimport { NameTodo } from \"./NameTodo\"\n\ntype ShowAndEditTodoPropsType = {\n    config: string,\n    toggleNameEditMode: () => void,\n    toggleDescEditMode: () => void,\n    update: () => void,\n    changeHandler: (e: React.ChangeEvent<HTMLInputElement>) => void,\n    editMode: boolean,\n    text: string | undefined,\n    loading: boolean,\n    isActive: boolean\n}\n\nexport const ShowAndEditTodo: React.FC<ShowAndEditTodoPropsType> = (props) => {\n\n    const changeEditMode = () => {\n        if (props.config === 'name') {\n            props.toggleNameEditMode()\n        } else {\n            props.toggleDescEditMode()\n        }\n    }\n\n    const changeField = () => {\n        props.update()\n    }\n\n    return (\n        <>\n            {props.editMode\n                ? <EditField\n                    config={props.config}\n                    text={props.text}\n                    changeHandler={props.changeHandler}\n                    changeField={changeField}\n                    loading={props.loading}\n                />\n                : <NameTodo\n                    config={props.config}\n                    changeInputEditMode={changeEditMode}\n                    name={props.text}\n                    isActive={props.isActive}\n                />\n            }\n        </>\n    )\n}","D:\\ProgKievFullStack\\стажировка\\MERN-main\\MERN-main\\client\\src\\components\\common\\MyMoment.tsx",[],"D:\\ProgKievFullStack\\стажировка\\MERN-main\\MERN-main\\client\\src\\components\\user\\ShowAndEdit.tsx",[],"D:\\ProgKievFullStack\\стажировка\\MERN-main\\MERN-main\\client\\src\\components\\common\\EditField.tsx",["132"],"import React from 'react'\n\ntype EditFieldPropsType = {\n    config: string,\n    changeHandler: (e: React.ChangeEvent<HTMLInputElement>) => void,\n    text: string,\n    changeField: () => void,\n    loading: boolean\n}\n\nexport const EditField: React.FC<EditFieldPropsType> = (props) => {\n    return (\n        <>\n            <>\n                <input\n                    id=\"updateName\"\n                    type=\"text\"\n                    className=\"yellow-input custom-input\"\n                    name={props.config}\n                    onChange={props.changeHandler}\n                    defaultValue={props.text}\n                />\n                <a\n                    className=\"cur-pointer none-style-a\"\n                    onClick={props.changeField}\n                    aria-disabled={props.loading}\n                >\n                    <i className=\"material-icons\">mode_edit</i>\n                </a>\n            </>\n        </>\n    )\n}","D:\\ProgKievFullStack\\стажировка\\MERN-main\\MERN-main\\client\\src\\components\\todo\\NameTodo.tsx",[],{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","replacedBy":"136"},{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","severity":1,"message":"138","line":22,"column":19,"nodeType":"139","messageId":"140","endLine":22,"endColumn":23},{"ruleId":"141","severity":1,"message":"142","line":34,"column":8,"nodeType":"143","endLine":34,"endColumn":10,"suggestions":"144"},{"ruleId":"145","severity":1,"message":"146","line":20,"column":23,"nodeType":"147","endLine":20,"endColumn":65},{"ruleId":"145","severity":1,"message":"148","line":49,"column":25,"nodeType":"147","endLine":52,"endColumn":26},{"ruleId":"145","severity":1,"message":"148","line":80,"column":13,"nodeType":"147","endLine":83,"endColumn":14},{"ruleId":"145","severity":1,"message":"148","line":23,"column":21,"nodeType":"147","endLine":26,"endColumn":22},{"ruleId":"145","severity":1,"message":"148","line":32,"column":27,"nodeType":"147","endLine":35,"endColumn":26},{"ruleId":"145","severity":1,"message":"148","line":38,"column":27,"nodeType":"147","endLine":41,"endColumn":26},{"ruleId":"145","severity":1,"message":"148","line":47,"column":21,"nodeType":"147","endLine":50,"endColumn":22},{"ruleId":"145","severity":1,"message":"148","line":18,"column":25,"nodeType":"147","endLine":21,"endColumn":26},{"ruleId":"145","severity":1,"message":"148","line":37,"column":21,"nodeType":"147","endLine":40,"endColumn":22},{"ruleId":"137","severity":1,"message":"149","line":1,"column":17,"nodeType":"139","messageId":"140","endLine":1,"endColumn":25},{"ruleId":"145","severity":1,"message":"148","line":23,"column":17,"nodeType":"147","endLine":27,"endColumn":18},"no-native-reassign",["150"],"no-negated-in-lhs",["151"],"@typescript-eslint/no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useCallback has missing dependencies: 'token' and 'userId'. Either include them or remove the dependency array.","ArrayExpression",["152"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"153","fix":"154"},"Update the dependencies array to be: [token, userId]",{"range":"155","text":"156"},[942,944],"[token, userId]"]